<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="https://cdn.discordapp.com/attachments/885089951207804949/1112741854258139268/logo.png" type="image/x-icon">
    <title><%= roomId%> | TIGET</title>
    <style>
        *{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body{
            background-color: #131313;
        }
        .container{
            width: 100%;
            max-width: 920px;
            margin: 0 auto;
            padding: 20px;
        }
        .chat-box{
            background-color: #000000;
            color:#c09e6b;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
        }
        .chat-header{
            padding: 10px 20px;
            border-bottom: 1px solid #131313;
        }
        .chat-header h1{
            font-size: 20px;
            font-weight: 600;
            padding: 20px;
        }
        .chat-display{
            height: 400px;
            overflow-y: scroll;
            padding: 10px 20px;
        }
        .chat-display::-webkit-scrollbar{
            width: 5px;
        }
        .chat-display::-webkit-scrollbar-thumb{
            background-color: #131313;
            border-radius: 5px;
        }
        .chat-display::-webkit-scrollbar-track{
            background-color: #333333;
        }
        .chat-left{
            display: flex;
            background-color: #333333;
            padding: 10px;
            flex-direction: column;
            align-items: flex-start;
        }
        .chat-right{
            display: flex;
            background-color: #202020;
            flex-direction: column;
            align-items: flex-end;
        }
        .chat-message{
            padding: 10px;
            margin: 5px 0;
            border-radius: 5px;
        }
        .chat-sender{
            font-size: 14px;
            font-weight: 600;
        }
        .chat-msg{
            font-size: 14px;
            font-weight: 400;
        }
        .chat-input{
            padding: 10px 20px;
            border-top: 1px solid #131313;
        }
        .chat-input form{
            display: flex;
            align-items: center;
        }
        .chat-input form input[type="text"]{
            width: 100%;
            padding: 10px;
            border: 1px solid #131313;
            border-radius: 5px;
            outline: none;
        }
        .chat-input form button{
            padding: 10px;
            border: none;
            border-radius: 5px;
            outline: none;
            cursor: pointer;
            background-color: #131313;
            color: #c09e6b;
            font-size: 14px;
            font-weight: 600;
            padding-left: 10px;
            padding-right: 10px;
        }
        .chat-input form button:hover{
            background-color: #c09e6b;
            color: #131313;
        }
        .auto-scroll{
            scroll-behavior: smooth;
        }
        .chat-connect{
            font-size: 14px;
            font-weight: 400;
            color: #6bc071;
        }
        .chat-disconnect{
            font-size: 14px;
            font-weight: 400;
            color: #c0836b;
        }
        #leaveroom{
            padding: 10px;
            float: right;
            top: 0;
            border: none;
            border-radius: 5px;
            outline: none;
            cursor: pointer;
            background-color: #131313;
            color: #c09e6b;
            font-size: 14px;
            font-weight: 600;
        }
        #leaveroom:hover{
            background-color: #e12d20;
            color: #acacac;
        }
        #roomid{
            color: #c09e6b;
            text-decoration: underline;
            cursor: pointer;
            
        }
        #roomid:hover{
            color: #acacac;
        }

    </style>
</head>
<body>
    <div class="container">
        <div class="chat-box">
            <div class="chat-header">
                <h1>RoomId : <a href="#" title="click to copy"  id="roomid" onclick="copyId('<%=roomId%>')"><%=roomId%></a><button  id="leaveroom">Leave room</></h1>
                
            </div>
            <div class="chat-display auto-scroll">
            </div>
            <div class="chat-input">
                <form action="">
                    <input type="hidden" name="sender" id="sender" value="<%=username%>">
                    <input type="text" name="inputMgs" id="inputMgs" placeholder="<%=username%> : Type your message here...">
                    <button type="submit" name="send" id="send">Send</button>
                </form>
            </div>
        </div>
    </div>

    

    <!-- import socket io -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.2/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>

                /* server side code
        io.on("connection", (socket) => {
    
    socket.on("join-room", ({roomId, username}) => {
        if(roomId == null || roomId == undefined || roomId == ""){
            roomId = Math.floor(Math.random() * 1000000);
        }
        socket.join(roomId);
        socket.to(roomId).emit("user-connected", username);
        socket.on("message", (data) => {
            io.to(roomId).emit("message", {
                sender: data.sender,
                message: data.message
            });
        }
        );
    }
    );

    socket.on("disconnect", () => {
        socket.broadcast.emit("user-disconnected");
    }
    );
}
);
 */
    (function Socket() {
        const username = '<%=username%>';
        const roomId = '<%=roomId%>';
        
        const socket = io("http://localhost:8080",{
    cors: {
        origins: ["http://localhost:8080"]
    },
    handlePreflightRequest: (req, res) => {
        const headers = {
            "Access-Control-Allow-Headers": "Content-Type, Authorization",
            "Access-Control-Allow-Origin": "*", //or the specific origin you want to give access to,
            "Access-Control-Allow-Credentials": true
        };
        res.writeHead(200, headers);
        res.end();
        }
    });

    const sender = document.getElementById('sender');
    const inputMgs = document.getElementById('inputMgs');
    const send = document.getElementById('send');
    const chatDisplay = document.querySelector('.chat-display');
    const chatLeft = document.querySelector('.chat-left');
    const chatRight = document.querySelector('.chat-right');
    const leaveroom = document.getElementById('leaveroom');

    socket.on("connect", () => {
        socket.emit("join-room", {roomId, username});
        document.getElementById('roomid').innerHTML = roomId;
        socket.on("message", (data)=>{
            if(data.sender == username){
                chatDisplay.innerHTML += `
                <div class="chat-right">
                    <div class="chat-message">
                        <div class="chat-sender">${data.sender}</div>
                        <div class="chat-msg">${data.message}</div>
                    </div>
                </div>
                `;
            }else{
                chatDisplay.innerHTML += `
                <div class="chat-left">
                    <div class="chat-message">
                        <div class="chat-sender">${data.sender}</div>
                        <div class="chat-msg">${data.message}</div>
                    </div>
                </div>
                `;
            }
            chatDisplay.scrollTop = chatDisplay.scrollHeight;
        })
    });

    socket.on("user-connected", (username) => {
        chatDisplay.innerHTML += `
        <div class="chat-left">
            <div class="chat-message">
                <div class="chat-sender">${username}</div>
                <div class="chat-connect">Connected!</div>
            </div>
        </div>
        `;
        chatDisplay.scrollTop = chatDisplay.scrollHeight;
    });

    socket.on("user-disconnected", () => {
        chatDisplay.innerHTML += `
        <div class="chat-left">
            <div class="chat-message">
                <div class="chat-sender">${username}</div>
                <div class="chat-disconnect">Disconnected!</div>
            </div>
        </div>
        `;
        chatDisplay.scrollTop = chatDisplay.scrollHeight;
    });

    leaveroom.addEventListener("click", (e) => {
        e.preventDefault();
        socket.emit("leave-room", {roomId, username});
        window.location.href = "/";
    });

    send.addEventListener("click", (e) => {
        e.preventDefault();
        if(inputMgs.value != ""){
            socket.emit("message", {
                sender: sender.value,
                roomId: roomId,
                message: inputMgs.value
            });
            inputMgs.value = "";
        }
        chatDisplay.scrollTop = chatDisplay.scrollHeight;
    });  
    })()

    function copyId(id){
        const el = document.createElement('textarea');
        el.value = id;
        document.body.appendChild(el);
        el.select();
        document.execCommand('copy');
        document.body.removeChild(el);
        alert(`Room id ${id} copied to clipboard`);
    }
    </script>
</body>
</html>
